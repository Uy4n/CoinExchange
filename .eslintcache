[{"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\index.js":"1","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\App.js":"2","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\reportWebVitals.js":"3","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\Coin\\Coin.jsx":"4","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx":"5","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx":"6","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\views\\Dashboard\\Dashboard.js":"8","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\PriceChart\\PriceChart.js":"9","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\mockData.js":"10","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\pages\\CoinDetailPage.jsx":"11","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\pages\\CoinSummaryPage.jsx":"12","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\CoinApiData\\CoinApiData.jsx":"13","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\HistoryChart\\HistoryChart.jsx":"14","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\HistoryChart\\HistoryOptions.js":"15"},{"size":500,"mtime":1613245677009,"results":"16","hashOfConfig":"17"},{"size":3726,"mtime":1614115035250,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2406,"mtime":1614032442351,"results":"20","hashOfConfig":"17"},{"size":1734,"mtime":1614031386689,"results":"21","hashOfConfig":"17"},{"size":1276,"mtime":1614114930162,"results":"22","hashOfConfig":"17"},{"size":1209,"mtime":1614032994403,"results":"23","hashOfConfig":"17"},{"size":831,"mtime":1613248707268,"results":"24","hashOfConfig":"17"},{"size":3729,"mtime":1613249956853,"results":"25","hashOfConfig":"17"},{"size":1850,"mtime":1613247209141,"results":"26","hashOfConfig":"17"},{"size":3119,"mtime":1613768549331,"results":"27","hashOfConfig":"17"},{"size":185,"mtime":1613338391020,"results":"28","hashOfConfig":"17"},{"size":2373,"mtime":1613771828365,"results":"29","hashOfConfig":"17"},{"size":2651,"mtime":1613771826728,"results":"30","hashOfConfig":"17"},{"size":409,"mtime":1613595101527,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1rfvzme",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\index.js",[],["66","67"],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\App.js",["68"],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\reportWebVitals.js",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\Coin\\Coin.jsx",["69"],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst TableData = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 14vw;\r\n`;\r\n\r\nconst TdControls = styled(TableData)`\r\n    width: 34vw;\r\n`;\r\n\r\nconst TdName = styled(TableData)`\r\n    width: 24vw;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 11px;\r\n    width: 64px;\r\n    margin: 3px 5px 0;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    \r\n    const handleRefresh = (event) => {\r\n        // We want to prevent the default action of\r\n        // re-submitting the form upon clicking 'refresh'\r\n        event.preventDefault();\r\n        props.handleRefresh(props.id);\r\n    }\r\n\r\n    const handleBuy = (event) => {\r\n        // We want to prevent the default action of\r\n        // re-submitting the form upon clicking 'refresh'\r\n        event.preventDefault();\r\n        props.handleTransaction(true, props.tickerId);\r\n    }\r\n\r\n    const handleSell = (event) => {\r\n        // We want to prevent the default action of\r\n        // re-submitting the form upon clicking 'refresh'\r\n        event.preventDefault();\r\n        props.handleTransaction(false, props.tickerId);\r\n    }\r\n\r\n        const toggleBalance = props.showBalance ?\r\n        <TableData>{props.balance}</TableData> :\r\n        '-';\r\n\r\n    return (\r\n        <tr>\r\n            <TdName>{props.name}</TdName>\r\n            <TableData>{props.ticker}</TableData>\r\n            <TableData>{props.showBalance ? props.balance : '-'}</TableData>\r\n            <TableData>${props.price}</TableData>\r\n            <TableData>${props.marketCap}</TableData>\r\n            <TdControls>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <Button className=\"btn btn-info\"\r\n                        onClick={handleRefresh}>\r\n                        Refresh\r\n                    </Button>\r\n                    <Button className=\"btn btn-warning\"\r\n                        onClick={handleBuy}>\r\n                        Buy\r\n                    </Button>\r\n                    <Button className=\"btn btn-danger\"\r\n                        onClick={handleSell}>\r\n                        Sell\r\n                    </Button>\r\n                </form>\r\n            </TdControls>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n}","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\views\\Dashboard\\Dashboard.js",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\PriceChart\\PriceChart.js",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\mockData.js",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\pages\\CoinDetailPage.jsx",["70","71"],"import React, {useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport CoinApiData from '../components/CoinApiData/CoinApiData';\r\nimport HistoryChart from '../components/HistoryChart/HistoryChart';\r\nimport axios from 'axios';\r\n\r\nconst CoinDetailPage = () => {\r\n    const { id } = useParams();\r\n    const [coinData, setCoinData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const timestamp = Math.floor(Date.now() / 1000);\r\n    const dayUnix = 86400;\r\n\r\n    const formatData = data => {\r\n        return data.map(element => {\r\n            return {\r\n                /* data[0] = time_open,\r\n                data[1] = time_close,\r\n                data[2] = open,\r\n                data[3] = high,\r\n                data[4] = low,\r\n                data[5] = close,\r\n                data[6] = volume,\r\n                data[7] = market_cap,\r\n                */\r\n                t: element.time_close,\r\n                y: element.close.toFixed(2),\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            const [day, week, year, detail] = await Promise.all([\r\n                axios.get(`https://api.coinpaprika.com/v1/coins/${id}/ohlcv/historical`, {\r\n                    params: {\r\n                        start: timestamp-dayUnix,\r\n                        end: timestamp,\r\n                        limit: 1,\r\n                        quote: \"usd\",\r\n                    },\r\n                }),\r\n                axios.get(`https://api.coinpaprika.com/v1/coins/${id}/ohlcv/historical`, {\r\n                    params: {\r\n                        start: timestamp-dayUnix * 7,\r\n                        end: timestamp,\r\n                        limit: 7,\r\n                        quote: \"usd\",\r\n                    },\r\n                }),\r\n                axios.get(`https://api.coinpaprika.com/v1/coins/${id}/ohlcv/historical`, {\r\n                    params: {\r\n                        start: timestamp-dayUnix * 365,\r\n                        end: timestamp,\r\n                        limit: 365,\r\n                        quote: \"usd\",\r\n                    },\r\n                }),\r\n                axios.get(`https://api.coinpaprika.com/v1/tickers/${id}`, {\r\n                    params: {\r\n                        quote: \"usd\",\r\n                    },\r\n                }),\r\n            ]);\r\n\r\n            setCoinData({\r\n                day: formatData(day.data),\r\n                week: formatData(week.data),\r\n                year: formatData(year.data),\r\n                detail: detail.data,\r\n            });\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n    const renderData = () => {\r\n        if (isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div className=\"coinlist\">\r\n                <HistoryChart data={coinData} />\r\n                <CoinApiData data={coinData.detail}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return renderData();\r\n}\r\n\r\nexport default CoinDetailPage;","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\pages\\CoinSummaryPage.jsx",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\CoinApiData\\CoinApiData.jsx",[],"C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\HistoryChart\\HistoryChart.jsx",["72"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport Chart from \"chart.js\"\r\nimport { historyOptions } from './HistoryOptions';\r\n\r\nconst HistoryChart = ({data}) => {\r\n    const chartRef = useRef();\r\n    const {day, week, year, detail} = data;\r\n    const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n    const determineTimeFormat = () => {\r\n        switch (timeFormat) {\r\n            case \"24h\":\r\n                return day;\r\n            case \"7d\":\r\n                return week;\r\n            case \"1y\":\r\n                return year;\r\n            default:\r\n                return day;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (chartRef && chartRef.current && detail) {\r\n            const chartInstance = new Chart(chartRef.current, {\r\n                type: \"line\",\r\n                data: {\r\n                    datasets: [{\r\n                        label: `${detail.name} price`,\r\n                        data: determineTimeFormat(),\r\n                        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\r\n                        borderColor: \"rgba(255, 159, 64, 1)\",\r\n                        pointRadius: 0,\r\n                    }]\r\n                },\r\n                options: {\r\n                    ...historyOptions\r\n                },\r\n            });\r\n        }\r\n    });\r\n\r\n    const renderPrice = () => {\r\n        if (detail) {\r\n            return (\r\n                <>\r\n                    <p className=\"my-0\">${data.detail.quotes.USD.price.toFixed(2)}</p>\r\n                    <p className={\r\n                        data.detail.quotes.USD.percent_change_24h < 0 ?\r\n                        \"text-danger my-0\" :\r\n                        \"text-success my-0\"\r\n                    }>{data.detail.quotes.USD.percent_change_24h}%</p>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-white border mt-2 rounded p-3\">\r\n            <div>{renderPrice()}</div>\r\n            <div>\r\n                <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n            </div>\r\n\r\n            <div className=\"chart-button mt-1\">\r\n                <button onClick={() => setTimeFormat(\"24h\")}\r\n                        className=\"button.btn.btn-outline-secondary.btn-sm\">24h</button>\r\n                <button onClick={() => setTimeFormat(\"7d\")}\r\n                        className=\"button.btn.btn-outline-secondary.btn-sm mx-1\">7d</button>\r\n                <button onClick={() => setTimeFormat(\"1y\")}\r\n                        className=\"button.btn.btn-outline-secondary.btn-sm\">1y</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HistoryChart;","C:\\Users\\I_Ben\\Documents\\Blockchain Programming\\React Web Development 101\\coin-exchange\\src\\components\\HistoryChart\\HistoryOptions.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":79,"column":26,"nodeType":"79","messageId":"80","endLine":79,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":47,"column":15,"nodeType":"83","messageId":"84","endLine":47,"endColumn":28},{"ruleId":"81","severity":1,"message":"85","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":77,"column":7,"nodeType":"88","endLine":77,"endColumn":9,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"90","line":25,"column":19,"nodeType":"83","messageId":"84","endLine":25,"endColumn":32},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'toggleBalance' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'timestamp'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'chartInstance' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [id, timestamp]",{"range":"96","text":"97"},[2734,2736],"[id, timestamp]"]